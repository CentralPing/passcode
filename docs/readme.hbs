# @centralping/passcode

[![Build Status](https://travis-ci.org/CentralPing/passcode.svg?branch=master)](https://travis-ci.org/CentralPing/passcode)
[![Coverage Status](https://coveralls.io/repos/github/CentralPing/passcode/badge.svg)](https://coveralls.io/github/CentralPing/passcode)
[![Dependency Status](https://david-dm.org/CentralPing/passcode.svg)](https://david-dm.org/CentralPing/passcode)
[![Greenkeeper Status](https://badges.greenkeeper.io/CentralPing/passcode.svg)](https://greenkeeper.io/)
[![Known Vulnerabilities](https://snyk.io/test/github/centralping/passcode/badge.svg)](https://snyk.io/test/github/centralping/passcode)
[![npm version](https://img.shields.io/npm/v/passcode.svg)](https://www.npmjs.com/package/passcode)

A slightly opinionated stateless passcode manager.

*The exposed configuration object will act as a global for all imports of this module.*

## Installation

`npm i --save https://github.com/CentralPing/passcode`

## API Reference

{{#module name="passcode"~}}
{{>body~}}
{{>members~}}
{{/module}}

## Examples

### For Simple Verification

```js
const { issue, verify } = require('passcode');

// Generate a token with random passcode
const tokenInfo = issue(); // {id, expires, code, token}
/**
 * Do something with the token
 */
// Verify token with code
const decodedToken = verify(token, {code: '012345'});
```

### For Verification With Meta Information

```js
const { issue, verify } = require('passcode');

// Generate a token with random passcode
const tokenInfo = issue({email: 'foo@bar.com'}); // {id, expires, code, token}
/**
 * Do something with the token
 */
// Verify token with code
const decodedToken = verify(token, {code: '012345'});
```

## License

MIT
